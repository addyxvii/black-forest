{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/Users/addison/workspace/black-forest/app/root.tsx", "/Users/addison/workspace/black-forest/app/routes/mempool/index.tsx", "../app/utils/txStream.tsx", "../app/models/memepool.server.ts", "/Users/addison/workspace/black-forest/app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\n\nimport { startStream } from \"~/models/memepool.server\";\n\ntype LoaderData = {\n  posts: Awaited<ReturnType<typeof startStream>>;\n};\n\nexport const loader = async () => {\n  return json<LoaderData>({\n    posts: await startStream(),\n  });\n};\n\nexport default function Mempool() {\n  const { mempool } = useLoaderData();\n  console.log(mempool);\n  return (\n    <main>\n      <h1>Mempool</h1>\n    </main>\n  );\n}\n", "import { ethers } from \"ethers\";\nconst url = process.env.ETHEREUM_MAINNET_RPC;\n\nexport default function connectToMempool() {\n  const customWsProvider = new ethers.providers.WebSocketProvider(url!);\n\n  customWsProvider.on(\"pending\", (tx) => {\n    customWsProvider.getTransaction(tx).then(function (transaction) {\n      console.log(transaction);\n    });\n  });\n\n  customWsProvider._websocket.on(\"error\", async () => {\n    console.log(`Unable to connect retrying in 3s...`);\n    setTimeout(connectToMempool, 3000);\n  });\n  customWsProvider._websocket.on(\"close\", async (code: string) => {\n    console.log(\n      `Connection lost with code ${code}! Attempting reconnect in 3s...`\n    );\n    customWsProvider._websocket.terminate();\n    setTimeout(connectToMempool, 3000);\n  });\n}\n", "import connectToMempool from \"~/utils/txStream\";\n\nexport async function startStream() {\n    return connectToMempool();\n  }", "import { Link } from \"react-router-dom\";\n\nexport default function Index() {\n  return (\n    <div style={{ fontFamily: \"system-ui, sans-serif\", lineHeight: \"1.4\" }}>\n      <h1>Welcome to the Black Forest</h1>\n      <h2>What's done in the dark will be brought to the light</h2>\n      <Link to=\"/mempool\" className=\"text-xl text-blue-600 underline\">\n        mempool\n      </Link>\n    </div>\n  );\n}\n", "export default {'version':'a908a2db','entry':{'module':'/build/entry.client-VOFVTKAC.js','imports':['/build/_shared/chunk-5AOWDLJX.js','/build/_shared/chunk-JDS7QY2H.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-NHZDJ67R.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-CWPXK7WG.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/mempool/index':{'id':'routes/mempool/index','parentId':'root','path':'mempool','index':true,'caseSensitive':undefined,'module':'/build/routes/mempool/index-Q2PUAZM2.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-A908A2DB.js'};", "\nimport * as entryServer from \"/Users/addison/workspace/black-forest/app/entry.server.tsx\";\nimport * as route0 from \"/Users/addison/workspace/black-forest/app/root.tsx\";\nimport * as route1 from \"/Users/addison/workspace/black-forest/app/routes/mempool/index.tsx\";\nimport * as route2 from \"/Users/addison/workspace/black-forest/app/routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/mempool/index\": {\n      id: \"routes/mempool/index\",\n      parentId: \"root\",\n      path: \"mempool\",\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    }\n  };"],
  "mappings": "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",
  "names": []
}
